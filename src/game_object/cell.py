from game_object.base_game_object import BaseGameObject


class Cell(BaseGameObject):
    """
    Это класс служит для представления ячейки игровой доски.

    Атрибыты:
    _________________________________________________________________________
        _color (тип str): цвет ячейки.
    """
    def __init__(self, x, y, mode):
        """
        Конструктор класса Cell

        Параметры:
        _________________________________________________________________________
            x (тип int): координата ячейки по оси х игровой доски.
        _________________________________________________________________________
            y (тип int): координата ячейки по оси y игровой доски.
        _________________________________________________________________________
            mode (тип str): режим определяющий принадлежность ячейки,
             "player" - ячейка принадлежит игровой доске игрока,
             "enemy" - ячейка принадлежит игровой доске врага (компьютера).
        """
        super().__init__(x, y, mode)
        self._color = "blue"

    def _get_view(self):
        """
        Метод отвечает за предоставление строкового представления ячейки на игровой доски.

        _________________________________________________________________________
        Возвращает:
            str: представление ячейки на игровой доске.
        """
        view = self._VIEW['alive_cell']
        color = self._COLORS[self._color]

        if not self._is_alive:
            view = self._VIEW['destroyed_cell']

        if self._is_colored:
            return f'\033[{color}m{view}\033[0m'

        else:
            return view

    def __repr__(self):
        return self._get_view()
